// Check opcodes with disassembler.
class Test
{
  public static void main()
  {
    System.out.println(0); // generates ldc.i4.0
    System.out.println(1); //           ldc.i4.1
    System.out.println(2); //           ldc.i4.2
    System.out.println(3); //           ldc.i4.3
    System.out.println(4); //           ldc.i4.4
    System.out.println(5); //           ldc.i4.5
    System.out.println(6); //           ldc.i4.6
    System.out.println(7); //           ldc.i4.7
    System.out.println(8); //           ldc.i4.8
    System.out.println(9); //           ldc.i4 9

    int a1;
    int a2;
    int a3;
    int a4;
    int a5;
    int a6;
    int a7;
    a1 = 1; // stloc.0
    a2 = 1; // stloc.1
    a3 = 1; // stloc.2
    a4 = 1; // stloc.3
    a5 = 1; // stloc.S 4
    a6 = 1; // stloc.S 5
    a7 = 1; // stloc.S 6
    System.out.println(a1); // ldloc.0
    System.out.println(a2); // ldloc.1
    System.out.println(a3); // ldloc.2
    System.out.println(a4); // ldloc.3
    System.out.println(a5); // ldloc.S 4
    System.out.println(a6); // ldloc.S 5
    System.out.println(a7); // ldloc.S 6
    new ArgTest().testMethod(1, 2, 3, 4, 5);
  }
}

class ArgTest
{
  public void noOp() { }

  public void testMethod(int a1, int a2, int a3, int a4, int a5)
  {
    this.noOp(); // ldarg.0
    System.out.println(a1); // ldarg.1, 0 is reserved for 'this'
    System.out.println(a2); // ldarg.2
    System.out.println(a3); // ldarg.3
    System.out.println(a4); // ldarg.S 4
    System.out.println(a5); // ldarg.S 5
    a1 = 0; // starg.S 1
    a2 = 0; // starg.S 2
  }
}